spreads
=======

This small Python tool tries to help establishing a quick and painless
scanning workflow for users of the DIYBookScanner_.

Features
--------
The following features are supported:

* Configure the cameras for shooting (i.e. configure which camera is left,
  which is right)
* Shoot with both cameras **simultaneously**
* Download images from cameras and combine them into a single directory
* Create a ScanTailor project file that the user can either further edit
  or run automatically
* Interactive Wizard-Mode that handles the full workflow from image
  capturing to post-processing

The following features are on the agenda, but not implemented yet:

* Automatically dewarp the scanned images using ppmunwarp_
* Do color-correction using a `graycard and imagemagick`_

Requirements
------------
* Python 2.7
* The `clint library`_ (used for the console interface)
* The `pillow library`_ (used to obtain EXIF information and rotate images)
* The `pyusb library`_ (used to obtain information about attached cameras)
* Two cameras running CHDK (development was done using two Canon A2200s,
  no further cameras were tested, but should work in theory)
* A version of `ptpcam modified for CHDK`_ in /usr/bin
* gphoto2
* An up-to date version of ScanTailor-enhanced_

Usage
-----
wizard
******
``spread wizard <project-path>``

Interactive dialog that asks the user for all relevant parameters, runs all
of the steps below and stores the output in *project-path*.


configure
*********
``spread configure``

Sets up your cameras for shooting by assigning every connected camera with a
'left' or 'right' label. This step only has to be performed once, as the
information is permanently stored on the cameras.


shoot
*****
``spread shoot [--iso <int>] [--shutter <int>] [--zoom <int>]``

Launches a shooting loop. You can set values for ISO, shutter speed and zoom
level. ISO and shutter speed have to be provided as APEX96 values, see the CHDK
wiki (ISO_, shutter_) for more information. Please be careful not to specify a
zoom level that is outside of your camera's range, as the program currently
does not check for that. Capture an image by pressing 'b' and stop the shooting
process by pressing any other key.


download
********
``spread download [--keep] <project-path>``

Downloads the images from both cameras and combines them in the *raw*
subdirectory of the *project-path*. Once the download is completed,
the images will be removed from the cameras to save space.

This last step can be skipped with the **--keep** option.


postprocess
***********
``spread postprocess [--rotate-inverse] [--jobs <int>] [--auto] <project-path>``

Rotates the images in *project-path*, creates a ScanTailor configuration and
processes the images with ScanTailor. The ScanTailor output can be found in the
*done* subdirectory of *project-path*.

The default rotation applied is +/- 90° for right/left pages, by specifying
the **--rotate-inverse** option, this can be changed to +/- 180°.

By default, the tool allows the user to manually adjust the autogenerated
ScanTailor configuration before the last step, this step can be skipped with
the **--auto** option.

By default, all available CPU cores are used for rotating and generating
the ScanTailor output. This setting can be adjusted with the **--jobs** option.


.. _DIYBookScanner: http://diybookscanner.org
.. _ppmunwarp: http://diybookscanner.org/forum/viewtopic.php?f=19&t=2589&p=14281#p14281
.. _graycard and imagemagick: http://diybookscanner.org/forum/viewtopic.php?f=20&t=2848
.. _clint library: https://github.com/kennethreitz/clint
.. _pillow library: https://github.com/python-imaging/Pillow
.. _pyusb library: https://pypi.python.org/pypi/pyusb/1.0.0a3
.. _ptpcam modified for CHDK: http://forum.chdk-treff.de/download/file.php?id=1640
.. _ScanTailor-enhanced: http://sourceforge.net/p/scantailor/code/ci/enhanced/tree/
.. _ISO: http://chdk.wikia.com/wiki/CHDK_scripting#set_sv96
.. _shutter: http://chdk.wikia.com/wiki/CHDK_scripting#set_tv96_direct
